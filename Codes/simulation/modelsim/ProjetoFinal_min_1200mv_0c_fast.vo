// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "06/07/2018 18:30:45"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ProjetoFinal (
	MotorBomba,
	MotorMistura,
	clock,
	OutArd01,
	OutArd02);
output 	MotorBomba;
output 	MotorMistura;
input 	clock;
input 	OutArd01;
input 	OutArd02;

// Design Ports Information
// MotorBomba	=>  Location: PIN_D12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// MotorMistura	=>  Location: PIN_C11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// OutArd01	=>  Location: PIN_L13,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clock	=>  Location: PIN_R8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// OutArd02	=>  Location: PIN_J14,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("ProjetoFinal_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \contadorTeste[1]~20_combout ;
wire \contadorTeste[6]~30_combout ;
wire \contadorTeste[8]~34_combout ;
wire \contadorTeste[10]~38_combout ;
wire \contadorTeste[14]~46_combout ;
wire \contadorTeste[16]~50_combout ;
wire \contadorTeste[17]~52_combout ;
wire \MotorBomba~output_o ;
wire \MotorMistura~output_o ;
wire \OutArd01~input_o ;
wire \Sensor01~q ;
wire \OutArd02~input_o ;
wire \Sensor02~feeder_combout ;
wire \Sensor02~q ;
wire \always1~0_combout ;
wire \clock~input_o ;
wire \clock~inputclkctrl_outclk ;
wire \contadorTeste[0]~60_combout ;
wire \contadorTeste[1]~21 ;
wire \contadorTeste[2]~22_combout ;
wire \contadorTeste[2]~23 ;
wire \contadorTeste[3]~24_combout ;
wire \contadorTeste[3]~25 ;
wire \contadorTeste[4]~26_combout ;
wire \contadorTeste[4]~27 ;
wire \contadorTeste[5]~28_combout ;
wire \contadorTeste[5]~29 ;
wire \contadorTeste[6]~31 ;
wire \contadorTeste[7]~32_combout ;
wire \contadorTeste[7]~33 ;
wire \contadorTeste[8]~35 ;
wire \contadorTeste[9]~36_combout ;
wire \contadorTeste[9]~37 ;
wire \contadorTeste[10]~39 ;
wire \contadorTeste[11]~40_combout ;
wire \contadorTeste[11]~41 ;
wire \contadorTeste[12]~42_combout ;
wire \contadorTeste[12]~43 ;
wire \contadorTeste[13]~44_combout ;
wire \contadorTeste[13]~45 ;
wire \contadorTeste[14]~47 ;
wire \contadorTeste[15]~48_combout ;
wire \contadorTeste[15]~49 ;
wire \contadorTeste[16]~51 ;
wire \contadorTeste[17]~53 ;
wire \contadorTeste[18]~54_combout ;
wire \contadorTeste[18]~55 ;
wire \contadorTeste[19]~56_combout ;
wire \contadorTeste[19]~57 ;
wire \contadorTeste[20]~58_combout ;
wire \MotorMistura~reg0feeder_combout ;
wire \MotorMistura~reg0_q ;
wire [32:0] contadorTeste;


// Location: FF_X39_Y32_N13
dffeas \contadorTeste[17] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[17]~52_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[17]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[17] .is_wysiwyg = "true";
defparam \contadorTeste[17] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y32_N11
dffeas \contadorTeste[16] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[16]~50_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[16]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[16] .is_wysiwyg = "true";
defparam \contadorTeste[16] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y32_N7
dffeas \contadorTeste[14] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[14]~46_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[14]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[14] .is_wysiwyg = "true";
defparam \contadorTeste[14] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y33_N31
dffeas \contadorTeste[10] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[10]~38_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[10]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[10] .is_wysiwyg = "true";
defparam \contadorTeste[10] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y33_N27
dffeas \contadorTeste[8] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[8]~34_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[8]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[8] .is_wysiwyg = "true";
defparam \contadorTeste[8] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y33_N23
dffeas \contadorTeste[6] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[6]~30_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[6]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[6] .is_wysiwyg = "true";
defparam \contadorTeste[6] .power_up = "low";
// synopsys translate_on

// Location: FF_X39_Y33_N13
dffeas \contadorTeste[1] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[1]~20_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[1]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[1] .is_wysiwyg = "true";
defparam \contadorTeste[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N12
cycloneive_lcell_comb \contadorTeste[1]~20 (
// Equation(s):
// \contadorTeste[1]~20_combout  = (contadorTeste[1] & (contadorTeste[0] $ (VCC))) # (!contadorTeste[1] & (contadorTeste[0] & VCC))
// \contadorTeste[1]~21  = CARRY((contadorTeste[1] & contadorTeste[0]))

	.dataa(contadorTeste[1]),
	.datab(contadorTeste[0]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\contadorTeste[1]~20_combout ),
	.cout(\contadorTeste[1]~21 ));
// synopsys translate_off
defparam \contadorTeste[1]~20 .lut_mask = 16'h6688;
defparam \contadorTeste[1]~20 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N22
cycloneive_lcell_comb \contadorTeste[6]~30 (
// Equation(s):
// \contadorTeste[6]~30_combout  = (contadorTeste[6] & (!\contadorTeste[5]~29 )) # (!contadorTeste[6] & ((\contadorTeste[5]~29 ) # (GND)))
// \contadorTeste[6]~31  = CARRY((!\contadorTeste[5]~29 ) # (!contadorTeste[6]))

	.dataa(contadorTeste[6]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[5]~29 ),
	.combout(\contadorTeste[6]~30_combout ),
	.cout(\contadorTeste[6]~31 ));
// synopsys translate_off
defparam \contadorTeste[6]~30 .lut_mask = 16'h5A5F;
defparam \contadorTeste[6]~30 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N26
cycloneive_lcell_comb \contadorTeste[8]~34 (
// Equation(s):
// \contadorTeste[8]~34_combout  = (contadorTeste[8] & (!\contadorTeste[7]~33 )) # (!contadorTeste[8] & ((\contadorTeste[7]~33 ) # (GND)))
// \contadorTeste[8]~35  = CARRY((!\contadorTeste[7]~33 ) # (!contadorTeste[8]))

	.dataa(contadorTeste[8]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[7]~33 ),
	.combout(\contadorTeste[8]~34_combout ),
	.cout(\contadorTeste[8]~35 ));
// synopsys translate_off
defparam \contadorTeste[8]~34 .lut_mask = 16'h5A5F;
defparam \contadorTeste[8]~34 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N30
cycloneive_lcell_comb \contadorTeste[10]~38 (
// Equation(s):
// \contadorTeste[10]~38_combout  = (contadorTeste[10] & (!\contadorTeste[9]~37 )) # (!contadorTeste[10] & ((\contadorTeste[9]~37 ) # (GND)))
// \contadorTeste[10]~39  = CARRY((!\contadorTeste[9]~37 ) # (!contadorTeste[10]))

	.dataa(contadorTeste[10]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[9]~37 ),
	.combout(\contadorTeste[10]~38_combout ),
	.cout(\contadorTeste[10]~39 ));
// synopsys translate_off
defparam \contadorTeste[10]~38 .lut_mask = 16'h5A5F;
defparam \contadorTeste[10]~38 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N6
cycloneive_lcell_comb \contadorTeste[14]~46 (
// Equation(s):
// \contadorTeste[14]~46_combout  = (contadorTeste[14] & (!\contadorTeste[13]~45 )) # (!contadorTeste[14] & ((\contadorTeste[13]~45 ) # (GND)))
// \contadorTeste[14]~47  = CARRY((!\contadorTeste[13]~45 ) # (!contadorTeste[14]))

	.dataa(contadorTeste[14]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[13]~45 ),
	.combout(\contadorTeste[14]~46_combout ),
	.cout(\contadorTeste[14]~47 ));
// synopsys translate_off
defparam \contadorTeste[14]~46 .lut_mask = 16'h5A5F;
defparam \contadorTeste[14]~46 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N10
cycloneive_lcell_comb \contadorTeste[16]~50 (
// Equation(s):
// \contadorTeste[16]~50_combout  = (contadorTeste[16] & (!\contadorTeste[15]~49 )) # (!contadorTeste[16] & ((\contadorTeste[15]~49 ) # (GND)))
// \contadorTeste[16]~51  = CARRY((!\contadorTeste[15]~49 ) # (!contadorTeste[16]))

	.dataa(contadorTeste[16]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[15]~49 ),
	.combout(\contadorTeste[16]~50_combout ),
	.cout(\contadorTeste[16]~51 ));
// synopsys translate_off
defparam \contadorTeste[16]~50 .lut_mask = 16'h5A5F;
defparam \contadorTeste[16]~50 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N12
cycloneive_lcell_comb \contadorTeste[17]~52 (
// Equation(s):
// \contadorTeste[17]~52_combout  = (contadorTeste[17] & (\contadorTeste[16]~51  $ (GND))) # (!contadorTeste[17] & (!\contadorTeste[16]~51  & VCC))
// \contadorTeste[17]~53  = CARRY((contadorTeste[17] & !\contadorTeste[16]~51 ))

	.dataa(contadorTeste[17]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[16]~51 ),
	.combout(\contadorTeste[17]~52_combout ),
	.cout(\contadorTeste[17]~53 ));
// synopsys translate_off
defparam \contadorTeste[17]~52 .lut_mask = 16'hA50A;
defparam \contadorTeste[17]~52 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: IOOBUF_X51_Y34_N23
cycloneive_io_obuf \MotorBomba~output (
	.i(\always1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\MotorBomba~output_o ),
	.obar());
// synopsys translate_off
defparam \MotorBomba~output .bus_hold = "false";
defparam \MotorBomba~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X38_Y34_N2
cycloneive_io_obuf \MotorMistura~output (
	.i(\MotorMistura~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\MotorMistura~output_o ),
	.obar());
// synopsys translate_off
defparam \MotorMistura~output .bus_hold = "false";
defparam \MotorMistura~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X53_Y10_N15
cycloneive_io_ibuf \OutArd01~input (
	.i(OutArd01),
	.ibar(gnd),
	.o(\OutArd01~input_o ));
// synopsys translate_off
defparam \OutArd01~input .bus_hold = "false";
defparam \OutArd01~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X52_Y18_N9
dffeas Sensor01(
	.clk(\clock~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\OutArd01~input_o ),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Sensor01~q ),
	.prn(vcc));
// synopsys translate_off
defparam Sensor01.is_wysiwyg = "true";
defparam Sensor01.power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X53_Y15_N8
cycloneive_io_ibuf \OutArd02~input (
	.i(OutArd02),
	.ibar(gnd),
	.o(\OutArd02~input_o ));
// synopsys translate_off
defparam \OutArd02~input .bus_hold = "false";
defparam \OutArd02~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X52_Y18_N2
cycloneive_lcell_comb \Sensor02~feeder (
// Equation(s):
// \Sensor02~feeder_combout  = \OutArd02~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\OutArd02~input_o ),
	.cin(gnd),
	.combout(\Sensor02~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \Sensor02~feeder .lut_mask = 16'hFF00;
defparam \Sensor02~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X52_Y18_N3
dffeas Sensor02(
	.clk(\clock~inputclkctrl_outclk ),
	.d(\Sensor02~feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\Sensor02~q ),
	.prn(vcc));
// synopsys translate_off
defparam Sensor02.is_wysiwyg = "true";
defparam Sensor02.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X52_Y18_N8
cycloneive_lcell_comb \always1~0 (
// Equation(s):
// \always1~0_combout  = (\Sensor01~q  & !\Sensor02~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\Sensor01~q ),
	.datad(\Sensor02~q ),
	.cin(gnd),
	.combout(\always1~0_combout ),
	.cout());
// synopsys translate_off
defparam \always1~0 .lut_mask = 16'h00F0;
defparam \always1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X27_Y0_N22
cycloneive_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G18
cycloneive_clkctrl \clock~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clock~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clock~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clock~inputclkctrl .clock_type = "global clock";
defparam \clock~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N4
cycloneive_lcell_comb \contadorTeste[0]~60 (
// Equation(s):
// \contadorTeste[0]~60_combout  = !contadorTeste[0]

	.dataa(gnd),
	.datab(gnd),
	.datac(contadorTeste[0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\contadorTeste[0]~60_combout ),
	.cout());
// synopsys translate_off
defparam \contadorTeste[0]~60 .lut_mask = 16'h0F0F;
defparam \contadorTeste[0]~60 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X39_Y33_N5
dffeas \contadorTeste[0] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[0]~60_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[0]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[0] .is_wysiwyg = "true";
defparam \contadorTeste[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N14
cycloneive_lcell_comb \contadorTeste[2]~22 (
// Equation(s):
// \contadorTeste[2]~22_combout  = (contadorTeste[2] & (!\contadorTeste[1]~21 )) # (!contadorTeste[2] & ((\contadorTeste[1]~21 ) # (GND)))
// \contadorTeste[2]~23  = CARRY((!\contadorTeste[1]~21 ) # (!contadorTeste[2]))

	.dataa(gnd),
	.datab(contadorTeste[2]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[1]~21 ),
	.combout(\contadorTeste[2]~22_combout ),
	.cout(\contadorTeste[2]~23 ));
// synopsys translate_off
defparam \contadorTeste[2]~22 .lut_mask = 16'h3C3F;
defparam \contadorTeste[2]~22 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N15
dffeas \contadorTeste[2] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[2]~22_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[2]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[2] .is_wysiwyg = "true";
defparam \contadorTeste[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N16
cycloneive_lcell_comb \contadorTeste[3]~24 (
// Equation(s):
// \contadorTeste[3]~24_combout  = (contadorTeste[3] & (\contadorTeste[2]~23  $ (GND))) # (!contadorTeste[3] & (!\contadorTeste[2]~23  & VCC))
// \contadorTeste[3]~25  = CARRY((contadorTeste[3] & !\contadorTeste[2]~23 ))

	.dataa(gnd),
	.datab(contadorTeste[3]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[2]~23 ),
	.combout(\contadorTeste[3]~24_combout ),
	.cout(\contadorTeste[3]~25 ));
// synopsys translate_off
defparam \contadorTeste[3]~24 .lut_mask = 16'hC30C;
defparam \contadorTeste[3]~24 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N17
dffeas \contadorTeste[3] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[3]~24_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[3]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[3] .is_wysiwyg = "true";
defparam \contadorTeste[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N18
cycloneive_lcell_comb \contadorTeste[4]~26 (
// Equation(s):
// \contadorTeste[4]~26_combout  = (contadorTeste[4] & (!\contadorTeste[3]~25 )) # (!contadorTeste[4] & ((\contadorTeste[3]~25 ) # (GND)))
// \contadorTeste[4]~27  = CARRY((!\contadorTeste[3]~25 ) # (!contadorTeste[4]))

	.dataa(gnd),
	.datab(contadorTeste[4]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[3]~25 ),
	.combout(\contadorTeste[4]~26_combout ),
	.cout(\contadorTeste[4]~27 ));
// synopsys translate_off
defparam \contadorTeste[4]~26 .lut_mask = 16'h3C3F;
defparam \contadorTeste[4]~26 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N19
dffeas \contadorTeste[4] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[4]~26_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[4]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[4] .is_wysiwyg = "true";
defparam \contadorTeste[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N20
cycloneive_lcell_comb \contadorTeste[5]~28 (
// Equation(s):
// \contadorTeste[5]~28_combout  = (contadorTeste[5] & (\contadorTeste[4]~27  $ (GND))) # (!contadorTeste[5] & (!\contadorTeste[4]~27  & VCC))
// \contadorTeste[5]~29  = CARRY((contadorTeste[5] & !\contadorTeste[4]~27 ))

	.dataa(gnd),
	.datab(contadorTeste[5]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[4]~27 ),
	.combout(\contadorTeste[5]~28_combout ),
	.cout(\contadorTeste[5]~29 ));
// synopsys translate_off
defparam \contadorTeste[5]~28 .lut_mask = 16'hC30C;
defparam \contadorTeste[5]~28 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N21
dffeas \contadorTeste[5] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[5]~28_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[5]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[5] .is_wysiwyg = "true";
defparam \contadorTeste[5] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N24
cycloneive_lcell_comb \contadorTeste[7]~32 (
// Equation(s):
// \contadorTeste[7]~32_combout  = (contadorTeste[7] & (\contadorTeste[6]~31  $ (GND))) # (!contadorTeste[7] & (!\contadorTeste[6]~31  & VCC))
// \contadorTeste[7]~33  = CARRY((contadorTeste[7] & !\contadorTeste[6]~31 ))

	.dataa(gnd),
	.datab(contadorTeste[7]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[6]~31 ),
	.combout(\contadorTeste[7]~32_combout ),
	.cout(\contadorTeste[7]~33 ));
// synopsys translate_off
defparam \contadorTeste[7]~32 .lut_mask = 16'hC30C;
defparam \contadorTeste[7]~32 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N25
dffeas \contadorTeste[7] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[7]~32_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[7]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[7] .is_wysiwyg = "true";
defparam \contadorTeste[7] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y33_N28
cycloneive_lcell_comb \contadorTeste[9]~36 (
// Equation(s):
// \contadorTeste[9]~36_combout  = (contadorTeste[9] & (\contadorTeste[8]~35  $ (GND))) # (!contadorTeste[9] & (!\contadorTeste[8]~35  & VCC))
// \contadorTeste[9]~37  = CARRY((contadorTeste[9] & !\contadorTeste[8]~35 ))

	.dataa(gnd),
	.datab(contadorTeste[9]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[8]~35 ),
	.combout(\contadorTeste[9]~36_combout ),
	.cout(\contadorTeste[9]~37 ));
// synopsys translate_off
defparam \contadorTeste[9]~36 .lut_mask = 16'hC30C;
defparam \contadorTeste[9]~36 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y33_N29
dffeas \contadorTeste[9] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[9]~36_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[9]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[9] .is_wysiwyg = "true";
defparam \contadorTeste[9] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N0
cycloneive_lcell_comb \contadorTeste[11]~40 (
// Equation(s):
// \contadorTeste[11]~40_combout  = (contadorTeste[11] & (\contadorTeste[10]~39  $ (GND))) # (!contadorTeste[11] & (!\contadorTeste[10]~39  & VCC))
// \contadorTeste[11]~41  = CARRY((contadorTeste[11] & !\contadorTeste[10]~39 ))

	.dataa(gnd),
	.datab(contadorTeste[11]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[10]~39 ),
	.combout(\contadorTeste[11]~40_combout ),
	.cout(\contadorTeste[11]~41 ));
// synopsys translate_off
defparam \contadorTeste[11]~40 .lut_mask = 16'hC30C;
defparam \contadorTeste[11]~40 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N1
dffeas \contadorTeste[11] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[11]~40_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[11]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[11] .is_wysiwyg = "true";
defparam \contadorTeste[11] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N2
cycloneive_lcell_comb \contadorTeste[12]~42 (
// Equation(s):
// \contadorTeste[12]~42_combout  = (contadorTeste[12] & (!\contadorTeste[11]~41 )) # (!contadorTeste[12] & ((\contadorTeste[11]~41 ) # (GND)))
// \contadorTeste[12]~43  = CARRY((!\contadorTeste[11]~41 ) # (!contadorTeste[12]))

	.dataa(gnd),
	.datab(contadorTeste[12]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[11]~41 ),
	.combout(\contadorTeste[12]~42_combout ),
	.cout(\contadorTeste[12]~43 ));
// synopsys translate_off
defparam \contadorTeste[12]~42 .lut_mask = 16'h3C3F;
defparam \contadorTeste[12]~42 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N3
dffeas \contadorTeste[12] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[12]~42_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[12]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[12] .is_wysiwyg = "true";
defparam \contadorTeste[12] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N4
cycloneive_lcell_comb \contadorTeste[13]~44 (
// Equation(s):
// \contadorTeste[13]~44_combout  = (contadorTeste[13] & (\contadorTeste[12]~43  $ (GND))) # (!contadorTeste[13] & (!\contadorTeste[12]~43  & VCC))
// \contadorTeste[13]~45  = CARRY((contadorTeste[13] & !\contadorTeste[12]~43 ))

	.dataa(gnd),
	.datab(contadorTeste[13]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[12]~43 ),
	.combout(\contadorTeste[13]~44_combout ),
	.cout(\contadorTeste[13]~45 ));
// synopsys translate_off
defparam \contadorTeste[13]~44 .lut_mask = 16'hC30C;
defparam \contadorTeste[13]~44 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N5
dffeas \contadorTeste[13] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[13]~44_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[13]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[13] .is_wysiwyg = "true";
defparam \contadorTeste[13] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N8
cycloneive_lcell_comb \contadorTeste[15]~48 (
// Equation(s):
// \contadorTeste[15]~48_combout  = (contadorTeste[15] & (\contadorTeste[14]~47  $ (GND))) # (!contadorTeste[15] & (!\contadorTeste[14]~47  & VCC))
// \contadorTeste[15]~49  = CARRY((contadorTeste[15] & !\contadorTeste[14]~47 ))

	.dataa(gnd),
	.datab(contadorTeste[15]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[14]~47 ),
	.combout(\contadorTeste[15]~48_combout ),
	.cout(\contadorTeste[15]~49 ));
// synopsys translate_off
defparam \contadorTeste[15]~48 .lut_mask = 16'hC30C;
defparam \contadorTeste[15]~48 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N9
dffeas \contadorTeste[15] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[15]~48_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[15]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[15] .is_wysiwyg = "true";
defparam \contadorTeste[15] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N14
cycloneive_lcell_comb \contadorTeste[18]~54 (
// Equation(s):
// \contadorTeste[18]~54_combout  = (contadorTeste[18] & (!\contadorTeste[17]~53 )) # (!contadorTeste[18] & ((\contadorTeste[17]~53 ) # (GND)))
// \contadorTeste[18]~55  = CARRY((!\contadorTeste[17]~53 ) # (!contadorTeste[18]))

	.dataa(gnd),
	.datab(contadorTeste[18]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[17]~53 ),
	.combout(\contadorTeste[18]~54_combout ),
	.cout(\contadorTeste[18]~55 ));
// synopsys translate_off
defparam \contadorTeste[18]~54 .lut_mask = 16'h3C3F;
defparam \contadorTeste[18]~54 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N15
dffeas \contadorTeste[18] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[18]~54_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[18]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[18] .is_wysiwyg = "true";
defparam \contadorTeste[18] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N16
cycloneive_lcell_comb \contadorTeste[19]~56 (
// Equation(s):
// \contadorTeste[19]~56_combout  = (contadorTeste[19] & (\contadorTeste[18]~55  $ (GND))) # (!contadorTeste[19] & (!\contadorTeste[18]~55  & VCC))
// \contadorTeste[19]~57  = CARRY((contadorTeste[19] & !\contadorTeste[18]~55 ))

	.dataa(gnd),
	.datab(contadorTeste[19]),
	.datac(gnd),
	.datad(vcc),
	.cin(\contadorTeste[18]~55 ),
	.combout(\contadorTeste[19]~56_combout ),
	.cout(\contadorTeste[19]~57 ));
// synopsys translate_off
defparam \contadorTeste[19]~56 .lut_mask = 16'hC30C;
defparam \contadorTeste[19]~56 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N17
dffeas \contadorTeste[19] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[19]~56_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[19]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[19] .is_wysiwyg = "true";
defparam \contadorTeste[19] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N18
cycloneive_lcell_comb \contadorTeste[20]~58 (
// Equation(s):
// \contadorTeste[20]~58_combout  = \contadorTeste[19]~57  $ (contadorTeste[20])

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(contadorTeste[20]),
	.cin(\contadorTeste[19]~57 ),
	.combout(\contadorTeste[20]~58_combout ),
	.cout());
// synopsys translate_off
defparam \contadorTeste[20]~58 .lut_mask = 16'h0FF0;
defparam \contadorTeste[20]~58 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X39_Y32_N19
dffeas \contadorTeste[20] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\contadorTeste[20]~58_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(contadorTeste[20]),
	.prn(vcc));
// synopsys translate_off
defparam \contadorTeste[20] .is_wysiwyg = "true";
defparam \contadorTeste[20] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X39_Y32_N24
cycloneive_lcell_comb \MotorMistura~reg0feeder (
// Equation(s):
// \MotorMistura~reg0feeder_combout  = contadorTeste[20]

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(contadorTeste[20]),
	.cin(gnd),
	.combout(\MotorMistura~reg0feeder_combout ),
	.cout());
// synopsys translate_off
defparam \MotorMistura~reg0feeder .lut_mask = 16'hFF00;
defparam \MotorMistura~reg0feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X39_Y32_N25
dffeas \MotorMistura~reg0 (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\MotorMistura~reg0feeder_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\MotorMistura~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \MotorMistura~reg0 .is_wysiwyg = "true";
defparam \MotorMistura~reg0 .power_up = "low";
// synopsys translate_on

assign MotorBomba = \MotorBomba~output_o ;

assign MotorMistura = \MotorMistura~output_o ;

endmodule
